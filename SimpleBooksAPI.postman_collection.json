{
	"info": {
		"_postman_id": "f263be69-9f2a-432c-b4e0-af15668bd3b7",
		"name": "SimpleBooksAPI",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "23050188"
	},
	"item": [
		{
			"name": "Check status",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"pm.expect(pm.response.code).to.eql(200);\r",
							"});\r",
							"pm.test(\"Response is an object\", function () {\r",
							"   pm.expect(pm.response.json()).to.be.an(\"Object\")\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response time to be below 700 ms\", function () {\r",
							"   pm.expect(pm.response.responseTime).to.be.below(700);\r",
							"})\r",
							"\r",
							"pm.test(\"Response status is ok\", function () {\r",
							"    pm.expect(pm.response.json().status).to.equal('OK')\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/status",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"status"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get List of Books",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"\r",
							"pm.test(\"Response is an array\", function () {\r",
							"   pm.expect(pm.response.json()).to.be.an(\"array\")\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							" pm.expect(pm.response.code).to.eql(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response time to be below 500 ms\", function () {\r",
							"   pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"})\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/books",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"books"
					],
					"query": [
						{
							"key": "type",
							"value": "fiction",
							"disabled": true
						},
						{
							"key": "limit",
							"value": "3",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Authentication",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"\r",
							"var data = pm.response.json();\r",
							"\r",
							"let token = data.accessToken;\r",
							"\r",
							"pm.collectionVariables.set(\"auth_token\", token);\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n   \"clientName\":\"{{$randomUserName}}\",\r\n   \"clientEmail\":\"{{$randomEmail}}\"\r\n}\r\n\r\n//mock data\r\n//random",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/api-clients",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api-clients"
					]
				}
			},
			"response": []
		},
		{
			"name": "Submit an order",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"pm.expect(pm.response.code).to.eql(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time to be below 500 ms\", function () {\r",
							"pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});\r",
							"\r",
							"var data = pm.response.json();\r",
							"\r",
							"pm.collectionVariables.set(\"orderID\",data.orderId);\r",
							"\r",
							"pm.environment.set(\"orderID\", data.orderId);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"bookId\": 4,\r\n  \"customerName\": \"Seda\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/orders",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"orders"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all orders",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json();\r",
							"\r",
							"console.log(data);\r",
							"\r",
							"\r",
							"var responseStatusCode = pm.response.code;\r",
							"\r",
							"\r",
							"function test(test_case_name, status_code){\r",
							"    console.log(test_case_name);\r",
							"    console.log(status_code);\r",
							"\r",
							"    if(status_code === 200){\r",
							"        console.log(true);\r",
							"    } else {\r",
							"        console.log(false);\r",
							"    }\r",
							"}\r",
							"\r",
							"\r",
							"test(\"Response status code is 200\", responseStatusCode);\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response time to be below 572ms\", function () {\r",
							"   pm.expect(pm.response.responseTime).to.be.below(572);\r",
							"})\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/orders",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"orders"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get an order  by Id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json();\r",
							"\r",
							"console.log(data);\r",
							"const responseStatusCode = pm.responsestatuscode;\r",
							"\r",
							" pm.expect(pm.response.code).to.eql(200);\r",
							"\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							" pm.expect(pm.response.code).to.eql(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response is an object\", function () {\r",
							"   pm.expect(pm.response.json()).to.be.an(\"Object\")\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response time to be below 500 ms\", function () {\r",
							"   pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/orders/{{orderID}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"orders",
						"{{orderID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update order",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							" pm.expect(pm.response.code).to.eql(204);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response time to be below 500 ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "//validation\r\n//curous user\r\n// iplement-tetbiq\r\n\r\n{\r\n  \"customerName\": \"John\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/orders/{{orderID}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"orders",
						"{{orderID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete the Order",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							" pm.expect(pm.response.code).to.eql(204);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time to be below 500 ms\", function () {\r",
							"   pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});\r",
							"\r",
							"function test (test_case_name, status_code){\r",
							"    console.log(test_case_name);\r",
							"    console.log(status_code);\r",
							"};\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/orders/{{orderID}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"orders",
						"{{orderID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Single  Book Info by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json();\r",
							"\r",
							"\r",
							"function test (test_case_name, status_code){\r",
							"    console.log(test_case_name);\r",
							"    console.log(status_code);\r",
							"};\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							" pm.expect(pm.response.code).to.eql(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time to be below 500 ms\", function () {\r",
							"   pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/books/{{bookId}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"books",
						"{{bookId}}"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{auth_token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "https://simple-books-api.glitch.me",
			"type": "default"
		},
		{
			"key": "orderID",
			"value": "CPnBX7ZBQPOba0HJrUKQ1",
			"type": "default"
		},
		{
			"key": "test",
			"value": ""
		},
		{
			"key": "bookId",
			"value": ""
		},
		{
			"key": "auth_token",
			"value": ""
		}
	]
}